import "io";
import ":std/str";
import ":std/files/path";

import "value" as json;
import "parser" as parse;

def example_main(argc: i32, argv: *string): i32 {
    if argc <= 1 {
        io.printf("USAGE: %s <FILEPATH>\n", *argv);
        return -1;
    }

    let waifus = str.from("");
    let filename = *(argv + 1);
    let result = path.create(filename).read_to_string(&waifus);
    if result.is_error() {
        io.printf("Could not read file\n");
        return -1;
    }
    defer waifus.free();

    let parser = parse.parser(waifus.view());

    let value = parser.parse();
    defer value.free();

    if value.kind == json.ValueKind.Error {
        io.printf("Error at %.*s\n", 20, value.data.error.at.data - 10);
        return -1;
    }

    let inner = value.at(0);
    if inner == null {
        return -1;
    }

    inner = inner.get(str.view_from("name"));
    if inner == null {
        return -1;
    }

    io.printf("%s\n", inner.data.s.cstring());

    return 0;
}
